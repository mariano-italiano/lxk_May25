sudo apt-get update
sudo apt-get install -y vim curl
lsmod | grep -e overlay -e br_netfilter
modprobe overlay 
sudo modprobe overlay 
sudo modprobe br_netfilter
lsmod | grep -e overlay -e br_netfilter
lsmod
vi /etc/modules-load.d/kubernetes.conf
sudo vi /etc/modules-load.d/kubernetes.conf
sysctl -a
vi /etc/sysctl.d/99-kubernetes.conf
sudo vi /etc/sysctl.d/99-kubernetes.conf
sudo sysctl --system
sysctl -a | grep net.ipv4.ip_forward
sudo apt-get isntall containerd -y
sudo apt-get install containerd -y
sudo kill -9 3988; sudo apt-get install containerd -y
sudo mkdir -p /etc/containerd
sudo containerd config default | sudo tee /etc/containerd/config.toml
sudo vi /etc/containerd/config.toml 
sudo systemctl restart containerd.service 
sudo systemctl status containerd.service 
swapon -s
sudo swapoff -a
swapon -s
sudo vi /etc/fstab 
sudo apt-get install kubelet
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
apt-get update
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gpg
sudo apt-cache madison kubeadm
sudo apt-get install kubeadm=1.32.4-1.1 kubelet=1.32.4-1.1 kubectl=1.32.4-1.1 -y
sudo apt-mark hold kubelet kubeadm kubectl
sudo kubeadm --help
sudo kubeadm init --help
sudo kubeadm init --pod-network-cidr 192.168.0.0/16
pwd
mkdir .kube
sudo cp -i /etc/kubernetes/admin.conf .kube/config 
ls -la .kube/
sudo chown $(id -u):$(id -g) $HOME/.kube/config
ls -la .kube/
kubectl get ndoes
kubectl get nodes
kubectl get pods -A
CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
CLI_ARCH=amd64
if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
cilium install
watch -n1 kubectl get po -A
kubectl get nodes
sudo kubeadm token create --print-join-command
kubectl get nodes
kubectl get pods -n kube-system 
kubectl cluster-info
sudo kubeadm token create --print-join-command
kubectl get nodes
watch -n1 kubectl get po -A
watch -n1 kubectl get po -A -o wide
kubectl get nodes
kubectl drain k8s-worker01 --ignore-daemonsets
kubectl get no
kubectl delete node k8s-worker01
kubectl get no
watch -n1 kubectl get po -A 
kubectl get nodes
sudo apt-get install bash-completion
echo 'source <(kubectl completion bash)' >>~/.bashrc
source ~/.bashrc
kubectl get pod -A
kubectl get no
cat /etc/apt/sources.list.d/kubernetes.list 
sudo kubeadm token create --print-join-command
kubectl get nodes
kubectl get pods -A
kubectl get namespaces 
kubectl get pod 
kubectl get pod -n kube-system 
kubectl get pod --all-namespaces
kubectl create namespace lxk-ns 
kubectl get ns
kubectl describe ns lxk-ns 
kubectl delete ns lxk-ns 
kubectl create namespace lxk-ns 
kubectl edit ns lxk-ns 
kubectl describe ns lxk-ns 
git clone https://github.com/mariano-italiano/lxk_May25.git
sudo apt-get install git -y
git clone https://github.com/mariano-italiano/lxk_May25.git
cd lxk_May25/
mkdir day1
cd day1
vi first-pod.yaml
kubectl api-resources 
vi first-pod.yaml
kubectl aplpy -f first-pod.yaml
kubectl apply -f first-pod.yaml
kubectl get pod 
kubectl delete pod first-pod 
kubectl create -f first-pod.yaml 
vi first-pod.yaml 
kubectl apply -f first-pod.yaml
kubectl describe pod first-pod 
kubectl edit pod first-pod 
kubectl describe pod first-pod 
kubectl get pod -o wide 
kubectl get pod -o wide --show-labels 
kubectl run test-pod1 --image ubuntu --labels os=ubuntu 
kubectl get pod
watch -n1 kubectl get pods
kubectl run test-pod1 --image ubuntu --labels os=ubuntu -o yaml --dry-run=client 
kubectl run ubuntu-pod --image ubuntu --labels os=ubuntu -o yaml --dry-run=client  > ubuntu-pod.yaml
vi ubuntu-pod.yaml
kubectl apply -f ubuntu-pod.yaml
kubectl get pods
vi ubuntu-pod.yaml 
kubectl get pods
kubectl replace --force -f ubuntu-pod.yaml
kubectl get pods
kubectl get pod test-pod1 -o yaml
kubectl get pod test-pod1 -o yaml > test-pod.yaml
vi test-pod.yaml
kubectl apply -f test-pod.yaml
kubectl replace --force -f test-pod.yaml
kubectl get pods
watch -n1 kubectl get pods
kubectl get pod --show-labels 
kubectl edit pod ubuntu-pod 
kubectl get pod --show-labels 
kubectl get po --selector os
kubectl get po --selector os=ubuntu
kubectl get pod -A --show-labels 
kubectl get pod -l 'tier in (control-plane),component in (etcd)'
kubectl get pod -l 'tier in (control-plane),component in (etcd)' -A 
kubectl get pod -l 'tier in (control-plane),component notin (etcd)' -A 
kubectl get po -A
kubectl get po test-pod1 -o json
kubectl get pod -A --sort-by .metadata.name
kubectl get pod -A --sort-by .spec.nodeName -o wide
kubectl get pod
kubectl delete pod test-pod1
kubectl exec --help
kubectl exec -it first-pod -- hostname
kubectl exec -it first-pod -- uptime
kubectl exec -it first-pod -- bash
ls -la
cd ..
history 
history | awk '$1 > 4' | cut -c 8- day1-history.txt
history | awk '$1 > 4' | cut -c 8- > day1-history.txt
